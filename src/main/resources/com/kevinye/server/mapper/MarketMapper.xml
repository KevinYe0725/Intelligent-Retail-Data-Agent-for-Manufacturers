<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kevinye.server.mapper.MarketMapper">
    <insert id="importNewStorage">
        insert into storage ( market_id, good_id, initial_goods,  date)
        values
            <foreach collection="storageList" item="storage" separator=",">
                (#{storage.marketId},#{storage.goodId},#{storage.initialGoods},#{storage.date})
            </foreach>
    </insert>
    <insert id="importNewMarkets">
        insert into supermarket (market_name, address, phone, person, email) values
            <foreach collection="marketList" separator="," item="market" >
                (#{market.marketName},#{market.address},#{market.phone},#{market.person},#{market.email})
            </foreach>
    </insert>


    <delete id="deleteMarkets">
        delete from
                   supermarket
               where
                   id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="getMarketByName" resultType="com.kevinye.pojo.Entity.Market">
        select  * from supermarket
        <where>
            <if test="marketName!= null and marketName !='' ">
                market_name like concat('%',#{marketName},'%')
            </if>
        </where>
    </select>
    <select id="getStorageByIds" resultType="com.kevinye.pojo.Entity.Storage">
        SELECT
        s.id,
        s.market_id,
        m.market_name,
        s.good_id,
        g.good_name,
        s.initial_goods,
        s.noon_goods,
        s.afternoon_goods,
        s.night_goods,
        s.date,
        s.status,
        s.assignment_status
        FROM
        storage s
        JOIN supermarket m ON s.market_id = m.id
        JOIN goods g ON s.good_id = g.id
        WHERE
        s.id IN
        <foreach collection="storageIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getMarketDataOfDate" resultType="com.kevinye.pojo.Entity.MarketData">
        select s.good_id ,
               goods.good_name,
               goods.image ,
               initial_goods,
               noon_goods,
               afternoon_goods,
               night_goods,
               auditor.auditor_name
        from
            storage s
            join goods  on s.good_id = goods.id
            join auditor_storage_date on s.id = auditor_storage_date.storageId
            join auditor on auditor_storage_date.auditorId = auditor.id
        where date = #{date}
    </select>
    <select id="getInformation4Market" resultType="java.lang.Integer">
        select
            count(*)
        from
            storage
        where market_id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        group by
            market_id
    </select>
    <select id="getMonthData" resultType="com.kevinye.pojo.Entity.DayData">
        select
            date,
            sum(initial_goods * g.price ) as day_sales
        from
            storage s
            inner join goods g on s.good_id = g.id
        where
            date between #{beginDate} and #{endDate}
        and
            market_id = #{marketId}

            <if test="goodId != null ">
                and    good_id = #{goodId}
            </if>
        group  by
            date
    </select>
    <select id="getAllGoodChoice" resultType="com.kevinye.pojo.VO.GoodsVO">
        select
            good_name,
            id as goodId
        from goods
        <where>
            <if test="goodName!=null and goodName!= ''">
                good_name like concat('%',#{goodName},'%')
            </if>
        </where>
    </select>

</mapper>